#!/usr/bin/env ruby
# vim:fileencoding=utf-8
# Inspired by mailtrap (https://github.com/mmower/mailtrap)

require 'socket'
require 'json'
require 'logger'

class FakeSMTPd
  attr_reader :port, :server, :message_dir, :log

  def initialize(options = {})
    @port = options.fetch(:port)
    @message_dir = options.fetch(:dir)
    @log = Logger.new($stderr)
  end

  def start
    @server = TCPServer.new(port)
    log.info "FakeSMTPd Serving on #{port}, " <<
             "writing messages to #{message_dir.inspect}"
    loop do
      begin
        serve(server.accept)
      rescue => e
        log.error "WAT: #{e.class.name} #{e.message}"
      end
    end
  end

  def serve(client)
    class << client
      attr_reader :client_id

      def getline
        line = gets
        line.chomp! unless line.nil?
        line
      end

      def to_s
        @client_id ||= Time.now.utc.strftime('%Y%m%d%H%M%S')
        "<smtp client #{@client_id}>"
      end
    end
    client.puts '220 localhost FakeSMTPd ready ESMTP'
    helo = client.getline
    log.info "#{client} Helo: #{helo.inspect}"

    if helo =~ /^EHLO\s+/
      log.info "#{client} Seen an EHLO"
      client.puts '250-localhost only has this one extension'
      client.puts '250 HELP'
    end

    from = client.getline
    client.puts '250 OK'
    log.info "#{client} From: #{from.inspect}"

    recipients = []
    loop do
      to = client.getline
      break if to.nil?

      if to =~ /^DATA/
        client.puts '354 Lemme have it'
        break
      else
        log.info "#{client} To: #{to.inspect}"
        recipients << to
        client.puts '250 OK'
      end
    end

    lines = []
    loop do
      line = client.getline
      break if line.nil? || line == '.'
      lines << line
      log.debug "#{client} + #{line}"
    end

    client.puts '250 OK'
    client.gets
    client.puts '221 Buhbye'
    client.close
    log.info "#{client} ding!"

    record(client, from, recipients, lines)
  end

  def record(client, from, recipients, body)
    outfile = File.join(message_dir, "fakesmtpd-client-#{client.client_id}.json")
    File.open(outfile, 'w') do |f|
      f.write JSON.pretty_generate(
        client_id: client.client_id,
        from: from,
        recipients: recipients,
        body: body,
      )
    end
  end
end

def main(argv = [].freeze)
  FakeSMTPd.new(port: argv.fetch(0), dir: argv.fetch(1)).start
end

if __FILE__ == $0
  main(ARGV)
end
